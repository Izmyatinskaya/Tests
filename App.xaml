<Application x:Class="wpf_тесты_для_обучения.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:wpf_тесты_для_обучения"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             StartupUri="LoginForm.xaml">

    <Application.Resources>
        <local:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
        <local:StringToBoolConverter x:Key="StringToBoolConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <!-- Accent Color -->
        <Color x:Key="AccentOrange">#FB9100</Color>
        <Color x:Key="AccentOrangeHover">#E4801D</Color>
        <Color x:Key="AccentLight">#FFF3E6</Color>
        <Color x:Key="AccentLight2">#FFEDD4</Color>
        <Color x:Key="White">#FFF</Color>
        <Color x:Key="WhiteHover">#EFEFEF</Color>
        <Color x:Key="Black">#07152F</Color>
        <Color x:Key="LightStroke">#E2E2E2</Color>
        <Color x:Key="DarkStroke">#ACACAC</Color>
        <Color x:Key="Green">#64A20D</Color>
        <Color x:Key="Green2">#518011</Color>
        <Color x:Key="Red">#E74C3C</Color>
        <Color x:Key="Red2">#C74134</Color>


        <SolidColorBrush x:Key="WindowDefaultBackground" Color="#FFFAF4"/>

        <FontFamily x:Key="BaseText">Lato Medium</FontFamily>
        <FontFamily x:Key="AcentText">Arial Black</FontFamily>
        <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource AccentOrange}" />
        <SolidColorBrush x:Key="AccentBrushHover" Color="{StaticResource AccentOrangeHover}" />
        <SolidColorBrush x:Key="AccentBrushLight" Color="{StaticResource AccentLight}" />
        <SolidColorBrush x:Key="AccentBrushLight2" Color="{StaticResource AccentLight2}" />
        <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource White}" />
        <SolidColorBrush x:Key="BackgroundBrushHover" Color="{StaticResource WhiteHover}" />
        <SolidColorBrush x:Key="BlockBorder" Color="{StaticResource LightStroke}" />
        <SolidColorBrush x:Key="BlockBorder2" Color="{StaticResource DarkStroke}" />
        
        <SolidColorBrush x:Key="BaseTextBrush" Color="{StaticResource Black}" />
        <SolidColorBrush x:Key="DoneColorBrush" Color="{StaticResource Green}" />
        <SolidColorBrush x:Key="DoneColorBrush2" Color="{StaticResource Green2}" />
        <SolidColorBrush x:Key="FailColorBrush" Color="{StaticResource Red}" />
        <SolidColorBrush x:Key="FailColorBrush2" Color="{StaticResource Red2}" />


        <SolidColorBrush x:Key="RadioNormalBrush" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="RadioNormalBorderBrush" Color="{StaticResource AccentOrange}"/>
        <SolidColorBrush x:Key="RadioGlyphBrush" Color="{StaticResource AccentOrange}"/>
        <SolidColorBrush x:Key="RadioDisabledBrush" Color="#FFE0E0E0"/>

        
        <!--ТЕКСТ-->
        <!-- обычный текст -->        
        <Style x:Key="BaseTextStyle" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="{StaticResource BaseText}"/>
            <Setter Property="Foreground" Value="{StaticResource BaseTextBrush}"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>

        <!-- обычный текст 24 -->
        <Style x:Key="BaseTextStyle24" TargetType="TextBlock" BasedOn="{StaticResource BaseTextStyle}">
            <Setter Property="FontSize" Value="24"/>
        </Style> 
        <!-- обычный текст 24 -->
        <Style x:Key="ErrorBaseTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextStyle}">
            <Setter Property="Foreground" Value="{StaticResource FailColorBrush}"/>
        </Style>
        <!-- Стиль для заголовков -->
        <Style x:Key="HeaderTextStyle"  TargetType="TextBlock">
            <Setter Property="FontSize" Value="38"/>
            <Setter Property="FontFamily" Value="Arial Black"/>
            <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
        </Style>
        <!-- Стиль для подзаголовков -->
        <Style x:Key="SubheaderTextStyle" BasedOn="{StaticResource HeaderTextStyle}" TargetType="TextBlock">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="TextAlignment" Value="Center"/>
        </Style>
        <!-- Стиль для ссылки -->
        <Style x:Key="LinkTextStyle" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="{StaticResource BaseText}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Margin" Value="0,10,0,10"/>
            <Setter Property="TextDecorations" Value="Underline"/>
        </Style>


        <!-- КНОПКИ -->
        <!--кнопка на форме добавлени теста-->
        <Style x:Key="CustomButtonStyle" TargetType="Button">
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="#FF080808"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderThickness" Value="0,0,0,0"/>
            <Setter Property="Padding" Value="3,4,3,4"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
        </Style>
        <!-- кнопка с фильтром -->
        <Style x:Key="FilterButtonStyle" TargetType="Button">
            <Setter Property="FontFamily" Value="{StaticResource BaseText}"/>
            <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource BaseTextBrush}"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="BorderBrush" Value="{StaticResource BlockBorder2}"/>
            <Setter Property="Padding" Value="5,5,5,5"/>
            <Setter Property="Margin" Value="0,0,25,0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Border x:Name="border" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            CornerRadius="6">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Column="0" 
                                       Text="{TemplateBinding Content}" 
                                       HorizontalAlignment="Left" 
                                       VerticalAlignment="Center" Margin="5,5,5,5"/>

                                    <Button Grid.Column="1" 
                                     Margin="0,0,5,0"
                                    Background="Transparent" 
                                    BorderThickness="0" 
                                    Foreground="{StaticResource BlockBorder2}"
                                    Content="×"  
                                    FontSize="20" HorizontalAlignment="Left" VerticalAlignment="Center" Click="CloseButton_Click"/>
                                </Grid>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!-- Эффект при наведении -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                                <Setter TargetName="border" Property="Background" Value="{StaticResource AccentBrushLight}"/>
                                <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!--<Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="3" 
                             ShadowDepth="1" 
                             Opacity="0.3"/>
                </Setter.Value>
            </Setter>-->
        </Style>
        <!-- кнопка меню -->
        <Style x:Key="MenuButtonStyle" TargetType="Button">
            <Setter Property="FontFamily" Value="{StaticResource BaseText}"/>
            <Setter Property="Foreground" Value="{StaticResource BackgroundBrush}"/>
            <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="Width" Value="250"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="Padding" Value="15,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <ContentPresenter  Grid.Column="0" 
                                                   HorizontalAlignment="Left" 
                                                   VerticalAlignment="Center" 
                                                   Margin="{TemplateBinding Padding}"/>
                                <!-- Треугольник (как в ComboBox) -->
                                <Path x:Name="triangle" Grid.Column="1"
                              Width="12" Height="6" Margin="0,0,15,0"
                              VerticalAlignment="Center" Visibility="Collapsed"
                              Fill="{TemplateBinding Background}"
                              Data="M0,0 L6,6 L12,0 Z"/>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource AccentBrushHover}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- кнопка меню после клика -->
        <Style x:Key="ClickMenuButtonStyle" TargetType="Button" BasedOn="{StaticResource MenuButtonStyle}">
            <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
            <Setter Property="Background" Value="{StaticResource BackgroundBrush }"/>


            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                Background="{TemplateBinding Background}" 
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <ContentPresenter  Grid.Column="0" 
                   HorizontalAlignment="Left" 
                   VerticalAlignment="Center" 
                   Margin="{TemplateBinding Padding}"/>

                                <Path x:Name="triangle" Grid.Column="1"
                      Width="12" Height="6" Margin="0,0,15,0"
                      VerticalAlignment="Center" Visibility="Visible"
                      Fill="{TemplateBinding Foreground}"
                      Data="M0,0 L6,6 L12,0 Z"/>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource BackgroundBrushHover}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- кнопка подменю 1ур-->
        <Style x:Key="SubMenuButtonStyle1" TargetType="Button" BasedOn="{StaticResource MenuButtonStyle}">
    <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
    <Setter Property="Background" Value="{StaticResource AccentBrushLight }"/>
    <Setter Property="Height" Value="40"/>
    <Setter Property="Padding" Value="30,0,0,0"/>
    <Setter Property="FontSize" Value="20"/>
    <Setter Property="Template">
        <Setter.Value>
            <ControlTemplate TargetType="Button">
                <Border x:Name="border"
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <ContentPresenter Grid.Column="0" 
                                        HorizontalAlignment="Left" 
                                        VerticalAlignment="Center" 
                                        Margin="{TemplateBinding Padding}"/>

                        <Path x:Name="triangle" Grid.Column="1"
                              Width="12" Height="6" Margin="0,0,15,0"
                              VerticalAlignment="Center"
                              Fill="{TemplateBinding Foreground}"
                              Data="M0,0 L6,6 L12,0 Z"
                              Visibility="{Binding Path=(local:ButtonProperties.ShowIcon), 
                                                  RelativeSource={RelativeSource TemplatedParent}, 
                                                  Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    </Grid>
                </Border>

                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="border" Property="Background" Value="{StaticResource AccentBrushLight2}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Setter.Value>
    </Setter>
</Style>
        <!-- кнопка подменю 2ур -->
        <Style x:Key="SubMenuButtonStyle2" TargetType="Button" BasedOn="{StaticResource MenuButtonStyle}">
            <Setter Property="Foreground" Value="{StaticResource BaseTextBrush}"/>
            <Setter Property="Background" Value="{StaticResource WindowDefaultBackground }"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="Padding" Value="45,0,0,0"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">

                            <!-- Основное содержимое кнопки -->
                            <ContentPresenter HorizontalAlignment="Left" 
                                                    VerticalAlignment="Center" 
                                                    Margin="{TemplateBinding Padding}"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource AccentBrushLight}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Блок пройденного теста -->
        <Style x:Key="HoverButtonStyleDone" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource DoneColorBrush}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Foreground" Value="{StaticResource BackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BackgroundBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <!-- Область фона с наведением -->
                            <Border x:Name="border"
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"/>

                            <!-- Контент кнопки -->
                            <ContentPresenter x:Name="contentPresenter"
                            HorizontalAlignment="Center" 
                            VerticalAlignment="Center"
                            Margin="{TemplateBinding Padding}"
                            TextElement.Foreground="{TemplateBinding Foreground}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource DoneColorBrush2}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Блок непройденного теста -->
        <Style x:Key="HoverButtonStyleFail" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource FailColorBrush}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Foreground" Value="{StaticResource BackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BackgroundBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <!-- Область фона с наведением -->
                            <Border x:Name="border"
                     Background="{TemplateBinding Background}" 
                     BorderBrush="{TemplateBinding BorderBrush}"
                     BorderThickness="{TemplateBinding BorderThickness}"
                     CornerRadius="4"/>

                            <!-- Контент кнопки -->
                            <ContentPresenter x:Name="contentPresenter"
                     HorizontalAlignment="Center" 
                     VerticalAlignment="Center"
                     Margin="{TemplateBinding Padding}"
                     TextElement.Foreground="{TemplateBinding Foreground}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource FailColorBrush2}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Блок теста -->
        <Style x:Key="HoverButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <!--Область фона с наведением-->
                            <Border 
                        x:Name="border"
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4"/>

                            <ContentPresenter 
                        HorizontalAlignment="Center" 
                        VerticalAlignment="Center"
                        Margin="{TemplateBinding Padding}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource AccentBrushLight}"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                                <Setter Property="Foreground" Value="{StaticResource AccentBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- кнопка акцентная -->
        <Style x:Key="OrangeButtonStyle" TargetType="Button">
            <Setter Property="FontFamily" Value="{StaticResource BaseText}"/>
            <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
            <!--<Setter Property="Foreground" Value="{}"/>-->

            <Setter Property="Background" Value="White"/>
            <!-- Фон по умолчанию -->
            <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            <Setter Property="Height" Value="39"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Padding" Value="60,10,60,10"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontSize" Value="16"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border 
            x:Name="border"
            Background="{TemplateBinding Background}" 
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="4">

                            <ContentPresenter 
                HorizontalAlignment="Center" 
                VerticalAlignment="Center"
                Margin="{TemplateBinding Padding}"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource AccentBrushLight}"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                                <Setter Property="Foreground" Value="{StaticResource AccentBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- кнопка акцентная маленькая-->
        <Style x:Key="OrangeLittleButtonStyle" TargetType="Button" BasedOn="{StaticResource OrangeButtonStyle}">

            <Setter Property="Height" Value="30"/>
            <Setter Property="Padding" Value="40,5, 40, 5"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <!-- кнопка результаты обычная -->
        <Style x:Key="GreyButtonStyle" TargetType="Button">
            <Setter Property="FontFamily" Value="{StaticResource BaseText}"/>
            <Setter Property="Foreground" Value="{StaticResource BaseTextBrush}"/>
            <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource BlockBorder2}"/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Padding" Value="60,10,60,10"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontSize" Value="16"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border 
                             x:Name="border"
                             Background="{TemplateBinding Background}" 
                             BorderBrush="{TemplateBinding BorderBrush}"
                             BorderThickness="{TemplateBinding BorderThickness}"
                             CornerRadius="6 6 6 6">

                            <ContentPresenter HorizontalAlignment="Center" 
                                             VerticalAlignment="Center"
                                             Margin="{TemplateBinding Padding}"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                                <Setter Property="Foreground" Value="{StaticResource AccentBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- кнопка результаты зеленая -->
        <Style x:Key="GreyButtonStyleDone" TargetType="Button" BasedOn="{StaticResource GreyButtonStyle}">
            <Setter Property="Foreground" Value="{StaticResource BackgroundBrush}"/>
            <Setter Property="Background" Value="{StaticResource DoneColorBrush}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="{StaticResource BackgroundBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border 
                      x:Name="border"
                      Background="{TemplateBinding Background}" 
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      CornerRadius="6 6 6 6">

                            <ContentPresenter HorizontalAlignment="Center" 
                                      VerticalAlignment="Center"
                                      Margin="{TemplateBinding Padding}"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource DoneColorBrush2}"/>
                                <Setter Property="Background" Value="{StaticResource DoneColorBrush2}"/>
                                <Setter Property="Foreground" Value="{StaticResource BackgroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- кнопка результаты красная -->
        <Style x:Key="GreyButtonStyleFail" TargetType="Button" BasedOn="{StaticResource GreyButtonStyle}">
            <Setter Property="Foreground" Value="{StaticResource BackgroundBrush}"/>
            <Setter Property="Background" Value="{StaticResource FailColorBrush}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="{StaticResource BackgroundBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border 
              x:Name="border"
              Background="{TemplateBinding Background}" 
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="6 6 6 6">

                            <ContentPresenter HorizontalAlignment="Center" 
                              VerticalAlignment="Center"
                              Margin="{TemplateBinding Padding}"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource FailColorBrush2}"/>
                                <Setter Property="Background" Value="{StaticResource FailColorBrush2}"/>
                                <Setter Property="Foreground" Value="{StaticResource BackgroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Стиль для кнопки "глазик" (правая часть) -->
        <Style x:Key="TogglePasswordButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            <Setter Property="BorderThickness" Value="0 1 1 1"/>
            <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                 CornerRadius="0 4 4 0"
                 Background="{TemplateBinding Background}"
                 BorderBrush="{TemplateBinding BorderBrush}"
                 BorderThickness="{TemplateBinding BorderThickness}"
                 SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource AccentBrushLight}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource AccentBrush}"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- РАМКИ -->
        <!-- Рамка блока -->
        <Style x:Key="LightBorder" TargetType="Border">
            <Setter Property="BorderBrush" Value="{StaticResource BlockBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="6"/>
            <Setter Property="Padding" Value="15"/>
            <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
        </Style>
        <!-- Рамка блока теста -->
        <Style x:Key="DarkBorder" TargetType="Border">
            <Setter Property="BorderBrush" Value="{StaticResource BlockBorder2}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="6"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
        </Style>
        <!-- Рамка блока теста -->
        <Style x:Key="MenuBorder" TargetType="Border">
            <Setter Property="BorderBrush" Value="{StaticResource BlockBorder2}"/>
            <Setter Property="BorderThickness" Value="0 0 1 0"/>
            <Setter Property="CornerRadius" Value="0 6 6 0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect 
                BlurRadius="7"
                Color="{StaticResource LightStroke}"
                ShadowDepth="5"
                Direction="25"/>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ТАБЛИЦЫ-->
        <Style x:Key="DefaultDataGridStyle2" TargetType="DataGrid">
            <Setter Property="Background" Value="#FFFFFF"/>
            <Setter Property="BorderBrush" Value="#E0E0E0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowBackground" Value="#F8F8F8"/>
            <Setter Property="AlternatingRowBackground" Value="#EEEEEE"/>
            <Setter Property="GridLinesVisibility" Value="All"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="CellStyle">
                <Setter.Value>
                    <Style TargetType="DataGridCell">
                        <Setter Property="Padding" Value="8"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="BorderBrush" Value="#DDDDDD"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="#333333"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
                                <Setter Property="Foreground" Value="#FFFFFF"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="RowStyle">
                <Setter.Value>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="#DDDDDD"/>
                        <Setter Property="BorderThickness" Value="0,0,0,1"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#ffe0b2"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="ColumnHeaderStyle">
                <Setter.Value>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="Background" Value="#F0F0F0"/>
                        <Setter Property="Foreground" Value="#222222"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="Padding" Value="6"/>
                        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                        <Setter Property="BorderThickness" Value="0,0,0,2"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="DataGridColumnHeader">
                                    <Grid>
                                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                <ContentPresenter VerticalAlignment="Center"/>
                                                <TextBlock Text="▼" Visibility="Collapsed" x:Name="SortIcon" FontSize="12" Margin="5,0,0,0"/>
                                            </StackPanel>
                                        </Border>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#ffd699"/>
                                        </Trigger>
                                        <Trigger Property="SortDirection" Value="Ascending">
                                            <Setter TargetName="SortIcon" Property="Text" Value="▲"/>
                                            <Setter TargetName="SortIcon" Property="Visibility" Value="Visible"/>
                                        </Trigger>
                                        <Trigger Property="SortDirection" Value="Descending">
                                            <Setter TargetName="SortIcon" Property="Text" Value="▼"/>
                                            <Setter TargetName="SortIcon" Property="Visibility" Value="Visible"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <!--таблицы обычные-->
        <!--<Style x:Key="DefaultDataGridStyle" TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource BaseTextBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BlockBorder2}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowBackground" Value="{StaticResource BackgroundBrush}"
            <Setter Property="GridLinesVisibility" Value="All"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="SelectionMode" Value="Extended"/>
            <Setter Property="SelectionUnit" Value="FullRow"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Margin" Value="30"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border Style="{StaticResource DarkBorder}" BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}" 
                                
                                Padding="1,1,1,0"
                        SnapsToDevicePixels="True"
                                CornerRadius="6">
                            <ScrollViewer Focusable="False" Name="DG_ScrollViewer">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>

                                            <DataGridColumnHeadersPresenter Grid.Column="1" Name="PART_ColumnHeadersPresenter"/>

                                            <ScrollContentPresenter Grid.ColumnSpan="2" 
                                                          Grid.Row="1" 
                                                          CanContentScroll="{TemplateBinding CanContentScroll}"/>

                                            <ScrollBar Grid.Column="2" 
                                              Grid.Row="1" 
                                              Name="PART_VerticalScrollBar"
                                              Orientation="Vertical"
                                              Maximum="{TemplateBinding ScrollableHeight}"
                                              ViewportSize="{TemplateBinding ViewportHeight}"
                                              Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                              Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>

                                            <Grid Grid.Column="1" Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>

                                                <ScrollBar Grid.Column="1" 
                                                  Name="PART_HorizontalScrollBar"
                                                  Orientation="Horizontal"
                                                  Maximum="{TemplateBinding ScrollableWidth}"
                                                  ViewportSize="{TemplateBinding ViewportWidth}"
                                                  Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                  Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Background" Value="{StaticResource AccentBrushLight}"/>
            <Setter Property="Foreground" Value="{StaticResource BaseTextBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BlockBorder2}"/>
            <Setter Property="FontFamily" Value="{StaticResource BaseText}"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Padding" Value="15,11,15,11"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid>
                            <Border Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
        </Style>

        <Style TargetType="{x:Type DataGridRow}">
            <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridRow}">
                        <Border x:Name="DGR_Border" 
                        Background="{TemplateBinding Background}" 
                        SnapsToDevicePixels="True">
                            <SelectiveScrollingGrid>
                                <SelectiveScrollingGrid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </SelectiveScrollingGrid.ColumnDefinitions>
                                <SelectiveScrollingGrid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </SelectiveScrollingGrid.RowDefinitions>

                                <DataGridCellsPresenter Grid.Column="1" 
                                                ItemsPanel="{TemplateBinding ItemsPanel}" 
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </SelectiveScrollingGrid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style  TargetType="{x:Type DataGridCell}">
            <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BlockBorder2}"/>
            <Setter Property="FontFamily" Value="{StaticResource BaseText}"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Padding" Value="15, 11, 15, 11"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border Background="{TemplateBinding Background}" 

                        SnapsToDevicePixels="True">
                            <ContentPresenter Margin="{TemplateBinding Padding}" 
                                      VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource AccentBrushLight}"/>
                    <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>-->

       
        <!-- Основной стиль DataGrid со встроенными стилями компонентов -->
        <Style x:Key="DefaultDataGridStyle" TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource BaseTextBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BlockBorder2}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowBackground" Value="{StaticResource BackgroundBrush}"/>
            <Setter Property="GridLinesVisibility" Value="All"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="SelectionMode" Value="Extended"/>
            <Setter Property="SelectionUnit" Value="FullRow"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Margin" Value="30"/>

            <!-- Встроенный стиль для ColumnHeader -->
            <Setter Property="ColumnHeaderStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Background" Value="{StaticResource AccentBrushLight}"/>
                        <Setter Property="Foreground" Value="{StaticResource BaseTextBrush}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource BlockBorder2}"/>
                        <Setter Property="FontFamily" Value="{StaticResource BaseText}"/>
                        <Setter Property="FontSize" Value="20"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="Padding" Value="15,11,15,11"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                    <Grid>
                                        <Border Background="{TemplateBinding Background}" 
                                        Padding="{TemplateBinding Padding}">
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                      VerticalAlignment="Center"/>
                                        </Border>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>

            <!-- Встроенный стиль для строк -->
            <Setter Property="RowStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type DataGridRow}">
                        <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DataGridRow}">
                                    <Border x:Name="DGR_Border" 
                                    Background="{TemplateBinding Background}" 
                                    SnapsToDevicePixels="True">
                                        <SelectiveScrollingGrid>
                                            <SelectiveScrollingGrid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </SelectiveScrollingGrid.ColumnDefinitions>
                                            <SelectiveScrollingGrid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </SelectiveScrollingGrid.RowDefinitions>

                                            <DataGridCellsPresenter Grid.Column="1" 
                                                            ItemsPanel="{TemplateBinding ItemsPanel}" 
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </SelectiveScrollingGrid>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>

            <!-- Встроенный стиль для ячеек -->
            <Setter Property="CellStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource BlockBorder2}"/>
                        <Setter Property="FontFamily" Value="{StaticResource BaseText}"/>
                        <Setter Property="FontSize" Value="18"/>
                        <Setter Property="Padding" Value="15, 11, 15, 11"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DataGridCell}">
                                    <Border Background="{TemplateBinding Background}" 
                                    SnapsToDevicePixels="True">
                                        <ContentPresenter Margin="{TemplateBinding Padding}" 
                                                  VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsDone2}" Value="True" >
                                <Setter Property="Foreground" Value="{StaticResource BackgroundBrush}"/>
                                <Setter Property="Background" Value="{StaticResource DoneColorBrush}"/>
                            </DataTrigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{StaticResource AccentBrushLight}"/>
                                <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border Style="{StaticResource DarkBorder}" BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}" 
                        Padding="1,1,1,0"
                        SnapsToDevicePixels="True"
                        CornerRadius="6">
                            <ScrollViewer Focusable="False" Name="DG_ScrollViewer">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>

                                            <DataGridColumnHeadersPresenter Grid.Column="1" Name="PART_ColumnHeadersPresenter"/>

                                            <ScrollContentPresenter Grid.ColumnSpan="2" 
                                                            Grid.Row="1" 
                                                            CanContentScroll="{TemplateBinding CanContentScroll}"/>

                                            <ScrollBar Grid.Column="2" 
                                                Grid.Row="1" 
                                                Name="PART_VerticalScrollBar"
                                                Orientation="Vertical"
                                                Maximum="{TemplateBinding ScrollableHeight}"
                                                ViewportSize="{TemplateBinding ViewportHeight}"
                                                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>

                                            <Grid Grid.Column="1" Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>

                                                <ScrollBar Grid.Column="1" 
                                                    Name="PART_HorizontalScrollBar"
                                                    Orientation="Horizontal"
                                                    Maximum="{TemplateBinding ScrollableWidth}"
                                                    ViewportSize="{TemplateBinding ViewportWidth}"
                                                    Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                    Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <!-- RadioButton -->
        <!-- Стиль для RadioButton -->
        <Style x:Key="OrangeRadioButtonStyle" TargetType="{x:Type RadioButton}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Foreground" Value="#FF333333"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="{StaticResource BaseText}"/>
            <Setter Property="Margin" Value="0,0,5, 0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Grid Width="20" Height="20">
                                    <Ellipse x:Name="Border" 
                                 Fill="{StaticResource RadioNormalBrush}"
                                 StrokeThickness="1"
                                 Stroke="{StaticResource RadioNormalBorderBrush}"/>
                                    <Ellipse x:Name="CheckMark"
                                 Margin="4"
                                 Fill="Transparent"/>
                                </Grid>
                            </BulletDecorator.Bullet>
                            <ContentPresenter 
                    Margin="8,0,0,0"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Left"
                    RecognizesAccessKey="True"/>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="CheckMark" Property="Fill" Value="{StaticResource RadioGlyphBrush}"/>
                                <Setter TargetName="Border" Property="Stroke" Value="{StaticResource RadioGlyphBrush}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Fill" Value="{StaticResource AccentBrushLight}"/>
                                <Setter TargetName="Border" Property="Stroke" Value="{StaticResource RadioGlyphBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Fill" Value="{StaticResource RadioGlyphBrush}"/>
                                <Setter TargetName="Border" Property="Stroke" Value="{StaticResource RadioGlyphBrush}"/>
                                <Setter TargetName="CheckMark" Property="Fill" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="Fill" Value="{StaticResource RadioDisabledBrush}"/>
                                <Setter TargetName="Border" Property="Stroke" Value="#40000000"/>
                                <Setter Property="Foreground" Value="#80000000"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>

        <!-- CHECK BOX -->
        <!-- Стиль для CheckBox -->
        <Style x:Key="OrangeCheckBoxStyle" TargetType="CheckBox">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Foreground" Value="#FF333333"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="{StaticResource BaseText}"/>
            <Setter Property="Margin" Value="0,0,5, 0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border"  
                                          Width="20" 
                                          Height="20" 
                                          CornerRadius="0" 
                                          Background="{StaticResource BackgroundBrush}"
                                          BorderThickness="1"
                                          BorderBrush="{StaticResource AccentBrush}">
                                    
                                     <Path Width="14" Height="14" 
                                            x:Name="CheckMark"
                                            SnapsToDevicePixels="False" 
                                            Stroke="{StaticResource AccentBrush}"
                                            StrokeThickness="2"
                                            Data="M 0 0 L 14 14 M 0 14 L 14 0" />   
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="4,0,0,0"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Left"
                                                RecognizesAccessKey="True"/>    
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="CheckMark" Property="Data" Value="M 0 14 L 14 0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource AccentBrushLight}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgroundBrush}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource AccentBrushLight}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource AccentBrushLight}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource AccentBrushLight}" />
                                <Setter Property="Foreground" Value="{StaticResource AccentBrushLight}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Поля ВВОДА -->
        <!-- Стиль для TextBox (левая часть) -->
        <Style x:Key="PasswordTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            <Setter Property="BorderThickness" Value="1 1 0 1"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" 
                        CornerRadius="4 0 0 4"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost"
                                  Focusable="false"
                                  HorizontalScrollBarVisibility="Hidden"
                                  VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource AccentBrushLight}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Стиль для PasswordBox (левая часть) -->
        <Style x:Key="PasswordBoxStyle1" TargetType="{x:Type PasswordBox}">
            <Setter Property="PasswordChar" Value="●"/>
            <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            <Setter Property="BorderThickness" Value="1 1 0 1"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border x:Name="border" 
                        CornerRadius="4 0 0 4"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost"
                                  Focusable="false"
                                  HorizontalScrollBarVisibility="Hidden"
                                  VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource AccentBrushLight}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Стиль для TextBox (левая часть) -->
        <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource PasswordTextBoxStyle}">
           
            <Setter Property="BorderThickness" Value="1 1 1 1"/>
           
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" 
                  CornerRadius="4"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost"
                            Focusable="false"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <!--<ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource AccentBrushLight}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>-->
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

            <!-- КОМБОБОКС -->
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border 
             x:Name="border"
             Background="Transparent"
             BorderBrush="Transparent"
             BorderThickness="0"
             Width="20"
             Height="{TemplateBinding ActualHeight}">
                            <Grid>
                                <Path 
                     x:Name="arrow"
                     Data="M 0,0 L 4,4 L 8,0 Z"
                     Fill="{StaticResource AccentBrush}"
                     HorizontalAlignment="Center"
                     VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource AccentBrushLight}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#DDDDDD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
       
        <!-- Стиль для ComboBoxItem (выделение элементов в списке) -->
        <Style x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border
                 x:Name="Bd"
                 Background="{TemplateBinding Background}"
                 BorderBrush="{TemplateBinding BorderBrush}"
                 BorderThickness="{TemplateBinding BorderThickness}"
                 Padding="{TemplateBinding Padding}">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- При наведении -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource AccentBrushLight}"/>
                            </Trigger>
                            <!-- При выборе -->
                            <!--<Trigger Property="IsSelected" Value="True">
                         <Setter TargetName="Bd" Property="Background" Value="{StaticResource SelectedBackground}"/>
                         <Setter TargetName="Bd" Property="Foreground" Value="Black"/>
                     </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <ControlTemplate x:Key="StaticComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost"
             Focusable="False"
             Background="{TemplateBinding Background}" />
        </ControlTemplate>
        
        
        <!-- Стиль для ComboBox -->
        <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <!-- Основной контейнер с закругленными углами -->
                            <Border x:Name="mainBorder"
             Background="{TemplateBinding Background}"
             BorderBrush="{TemplateBinding BorderBrush}"
             BorderThickness="{TemplateBinding BorderThickness}"
             CornerRadius="4">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <!-- ContentPresenter для отображения выбранного элемента -->
                                    <ContentPresenter 
                         x:Name="contentPresenter"
                         Grid.Column="0"
                         Content="{TemplateBinding SelectionBoxItem}"
                         ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                         Margin="{TemplateBinding Padding}"
                         VerticalAlignment="Center"
                         HorizontalAlignment="Left"/>

                                    <!-- ToggleButton с выравниванием по правому краю -->
                                    <ToggleButton 
                         Grid.Column="1"
                         x:Name="toggleButton"
                         Background="Transparent"
                         BorderBrush="Transparent"
                         BorderThickness="0"
                         Width="20"
                         IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                         Style="{StaticResource ComboBoxToggleButton}"/>
                                </Grid>
                            </Border>

                            <!-- Выпадающий список -->
                            <Popup 
                 x:Name="PART_Popup"
                 AllowsTransparency="True"
                 Placement="Bottom"
                 IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                <Border 
                     Background="White"
                     BorderBrush="{StaticResource AccentBrush}"
                     BorderThickness="1"
                     CornerRadius="0 0 4 4">
                                    <ScrollViewer>
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource AccentBrushLight}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}"/>
        </Style>
        <!-- Основной стиль ComboBox с фиксированным текстом и работающим выбором -->
        <Style x:Key="ComboBoxStyle2" TargetType="{x:Type ComboBox}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="{StaticResource BlockBorder2}"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="Height" Value="37"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <!-- Основной контейнер с закругленными углами -->
                            <Border x:Name="mainBorder"
                         Background="{TemplateBinding Background}"
                         BorderBrush="{TemplateBinding BorderBrush}"
                         BorderThickness="{TemplateBinding BorderThickness}"
                         CornerRadius="4">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <!-- Наложение двух элементов: фиксированного текста и выбранного значения -->
                                    <Grid>
                                        <!-- Фиксированный текст -->
                                        <TextBlock Text="{TemplateBinding Tag}"
                                                   Foreground="{StaticResource BlockBorder2}"
                                                   FontSize="16"
                                                   FontFamily="{StaticResource BaseText}"
                                           Margin="{TemplateBinding Padding}"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Left"/>

                                        <!-- Выбранное значение (прозрачное, но сохраняет функциональность) -->
                                        <ContentPresenter 
                                    x:Name="contentPresenter"
                                    Content="{TemplateBinding Tag}"
                                            
                                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                    Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Left"
                                    Opacity="0"/>
                                    </Grid>

                                    <!-- ToggleButton с выравниванием по правому краю -->
                                    <ToggleButton 
                                Grid.Column="1"
                                x:Name="toggleButton"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                Width="20"
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"   
                                Style="{StaticResource ComboBoxToggleButton}"/>
                                </Grid>
                            </Border>

                            <!-- Выпадающий список -->
                            <Popup 
                        x:Name="PART_Popup"
                        AllowsTransparency="True"
                        Placement="Bottom"
                        IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                <Border 
                            Background="White"
                            BorderBrush="{StaticResource AccentBrush}"
                            BorderThickness="1"
                            CornerRadius="0 0 4 4">
                                    <ScrollViewer>
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource AccentBrushLight}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}"/>
        </Style>
        
        <!--серый комбобокс-->
           <!--серый toogle-button-->
        <Style x:Key="ComboBoxToggleButtonGrey" TargetType="{x:Type ToggleButton}">
       <Setter Property="Template">
           <Setter.Value>
               <ControlTemplate TargetType="{x:Type ToggleButton}">
                   <Border 
x:Name="border"
Background="Transparent"
BorderBrush="Transparent"
BorderThickness="0"
Width="20"
Height="{TemplateBinding ActualHeight}">
                       <Grid>
                           <Path 
        x:Name="arrow"
        Data="M 0,0 L 4,4 L 8,0 Z"
        Fill="{StaticResource BlockBorder2}"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"/>
                       </Grid>
                   </Border>
                   <ControlTemplate.Triggers>
                       <Trigger Property="IsMouseOver" Value="True">
                           <Setter TargetName="border" Property="Background" Value="{StaticResource AccentBrushLight}"/>
                       </Trigger>
                       <Trigger Property="IsPressed" Value="True">
                           <Setter TargetName="border" Property="Background" Value="#DDDDDD"/>
                       </Trigger>
                   </ControlTemplate.Triggers>
               </ControlTemplate>
           </Setter.Value>
       </Setter>
   </Style>

        <Style x:Key="ComboBoxGreyStyle3" TargetType="{x:Type ComboBox}">
            <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BlockBorder2}"/>
            <Setter Property="Foreground" Value="{StaticResource BlockBorder2}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontFamily" Value="{StaticResource BaseText}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <Border x:Name="mainBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <!-- Добавьте этот TextBlock для отображения текста по умолчанию -->
                                    <TextBlock x:Name="placeholderText"
                                       Text="{TemplateBinding Text}"
                                       Foreground="{StaticResource BlockBorder2}"
                                       FontSize="16"
                                       FontFamily="{StaticResource BaseText}"
                                       Margin="{TemplateBinding Padding}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Left"
                                       Visibility="Collapsed"/>

                                    <!-- ContentPresenter для отображения выбранного элемента -->
                                    <ContentPresenter 
                                x:Name="contentPresenter"
                                Grid.Column="0"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left"/>

                                    <ToggleButton 
                                Grid.Column="1"
                                x:Name="toggleButton"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                Width="20"
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{StaticResource ComboBoxToggleButtonGrey}"/>
                                </Grid>
                            </Border>

                            <!-- Выпадающий список -->
                            <Popup 
            x:Name="PART_Popup"
            AllowsTransparency="True"
            Placement="Bottom"
            IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                <Border 
                Background="White"
                BorderBrush="{StaticResource BlockBorder2}"
                BorderThickness="1"
                CornerRadius="0 0 4 4">
                                    <ScrollViewer>
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!-- Показываем placeholder, когда ничего не выбрано -->
                            <Trigger Property="SelectedItem" Value="{x:Null}">
                                <Setter TargetName="placeholderText" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="contentPresenter" Property="Visibility" Value="Collapsed"/>
                            </Trigger>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource AccentBrushLight}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}"/>
        </Style>



        <!-- ЛИСТБОКС -->
        <!-- Стиль для элементов ListBox -->
        <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border
                    x:Name="Bd"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="{TemplateBinding Padding}">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- При наведении -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource AccentBrushLight}"/>
                            </Trigger>
                            <!-- При выборе -->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource AccentBrushLight}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Стиль для ListBox -->
        <Style x:Key="ListBoxStyle1" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Grid>
                            <!-- Основной контейнер с закругленными углами -->
                            <Border x:Name="mainBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                                <ScrollViewer>
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Grid>
                        <!--<ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource AccentBrushLight}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>-->
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItemStyle}"/>
        </Style>

        <!--DATEPICKER-->
        <!-- Стиль для текстового поля DatePicker -->
        <Style x:Key="DropDownButtonStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            
                            <Border x:Name="Background" Background="Transparent" CornerRadius="0,4,4,0" />
                            <Path x:Name="Arrow" Fill="{StaticResource AccentBrush}" HorizontalAlignment="Center" VerticalAlignment="Center"
                          Data="M0,0 L4,4 8,0 Z" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type DatePickerTextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
                        <TextBox x:Name="PART_TextBox" 
                         Text="{Binding Path=SelectedDate, RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}}" 
                         Background="{TemplateBinding Background}"
                         BorderThickness="0"
                         Padding="6,3,5,3"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="CalendarDayButtonStyle" TargetType="{x:Type CalendarDayButton}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CalendarDayButton}">
                        <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource AccentBrushLight}"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource AccentBrush}"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsToday" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="CalendarItemStyle" TargetType="{x:Type CalendarItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CalendarItem}">
                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <CalendarDayButton x:Name="PART_SelectedDate"
                                           Style="{StaticResource CalendarDayButtonStyle}"/>
                                <!-- Другие элементы календаря -->
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DatePickerCalendarStyle" TargetType="{x:Type Calendar}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Calendar}">
                        <StackPanel x:Name="PART_Root" Background="{TemplateBinding Background}">
                            <CalendarItem x:Name="PART_CalendarItem" 
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Style="{StaticResource CalendarItemStyle}"/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type DatePicker}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DatePicker}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" 
                                                     Storyboard.TargetName="PART_DisabledVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Border x:Name="mainBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <DatePickerTextBox x:Name="PART_TextBox"
                                               Grid.Column="0"
                                               Foreground="{TemplateBinding Foreground}"
                                               Background="Transparent"/>

                                    <Button x:Name="PART_Button"
                                    Grid.Column="1"
                                    Foreground="{TemplateBinding Foreground}"
                                    Focusable="False"
                                    HorizontalAlignment="Right"
                                    Style="{StaticResource DropDownButtonStyle}"
                                    VerticalAlignment="Stretch"
                                    Width="20"/>
                                </Grid>
                            </Border>

                            <Grid x:Name="PART_DisabledVisual" Grid.ColumnSpan="2" Opacity="0" IsHitTestVisible="False">
                                <Border CornerRadius="4" Background="{StaticResource AccentBrushLight}"/>
                            </Grid>

                            <Popup x:Name="PART_Popup"
                           AllowsTransparency="True"
                           Placement="Bottom"
                           PlacementTarget="{Binding ElementName=mainBorder}"
                           StaysOpen="False">
                                <Border Background="White"
                                BorderBrush="{StaticResource AccentBrush}"
                                BorderThickness="1"
                                CornerRadius="0 0 4 4">
                                    <Calendar x:Name="PART_Calendar"
                                      Style="{StaticResource DatePickerCalendarStyle}"/>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource AccentBrushLight}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        
        


        



        <Style x:Key="OrangeComboBoxStyle" TargetType="ComboBox">
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,20,0,10"/>
            <Setter Property="Padding" Value="40,10,40,10"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Cursor" Value="Hand"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                                <DockPanel HorizontalAlignment="Right" Margin="0,0,10,0" >
                                    <ContentPresenter Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"
                                              RecognizesAccessKey="True"/>
                                    <ToggleButton DockPanel.Dock="Right"
                                          IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                          Background="Transparent"
                                          BorderThickness="0"
                                          Focusable="False"
                                          ClickMode="Press">
                                        <Path HorizontalAlignment="Center" VerticalAlignment="Center"
                                      Data="M 0 0 L 4 4 L 8 0 Z"
                                      Fill="{StaticResource AccentBrush}"/>
                                    </ToggleButton>
                                </DockPanel>
                            </Border>
                            <Popup Name="Popup"
                           Placement="Bottom"
                           IsOpen="{TemplateBinding IsDropDownOpen}"
                           AllowsTransparency="True"
                           Focusable="False"
                           PopupAnimation="Slide">
                                <Border 
                            Background="White"
                            BorderBrush="{StaticResource AccentBrush}"
                            BorderThickness="1"
                            CornerRadius="4"
                            SnapsToDevicePixels="True">
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource AccentBrushLight}"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                                <Setter Property="Foreground" Value="{StaticResource AccentBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="#EEE"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="#CCC"/>
                                <Setter Property="Foreground" Value="#AAA"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="AddAnswerButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="Margin" Value="5"/>

            <Style.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>

        </Style>

        <Style x:Key="OrangeTabItemStyle" TargetType="TabItem">
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Width" Value="200"/>
            <Setter Property="Margin" Value="-5,0,0,0"/>
            <Setter Property="Padding" Value="5"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0,0,0,1"
                        CornerRadius="0,10,10,0">
                            <Grid>
                                <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          ContentSource="Header" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="AcentTextStyle" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Arial Black"/>
            <Setter Property="FontSize" Value="36"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,20,0,20"/>
        </Style>

        <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="Foreground" Value="Black"/>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="BoldTextBlockStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Margin" Value="0,2,0,10"/>
            <Setter Property="Foreground" Value="Black"/>
        </Style>


    </Application.Resources>


</Application>
